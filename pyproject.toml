[build-system]
requires = [ "setuptools",]
build-backend = "setuptools.build_meta"

[project]
requires-python = ">=3.12"
name = "edf_forecasting"
readme = "README.md"
dynamic = ["version"]

dependencies = [
  "kedro~=1.0.0",
  "kedro-mlflow==1.0.1",
  "mlflow==2.8.1",
  "numpy==1.26.4",
  "pyarrow==14.0.2",
  "protobuf==3.20.3",
  "pandas==2.1.4",
  "scikit-learn==1.4.2",
  "xgboost==2.1.1",
  "optuna==3.5.0",
  "mapie==0.9.1",
  "matplotlib==3.8.4",
  "plotly==5.22.0",
  "ipython==8.26.0",
  "jupyterlab==4.2.5",
  "notebook==7.2.1",
  "ipywidgets==8.1.3",
  "missingno==0.5.2",
  "fastparquet==2024.5.0",
  "holidays==0.52",
  "kedro-datasets~=3.0",
]

[project.scripts]
edf-forecasting = "edf_forecasting.__main__:main"

[project.optional-dependencies]
dev = [ "pytest-cov~=3.0", "pytest-mock>=1.7.1, <2.0", "pytest~=7.2", "ruff~=0.12.0",]

[tool.kedro]
package_name = "edf_forecasting"
project_name = "edf-forecasting"
kedro_init_version = "1.0.0"
tools = "['Linting', 'Testing', 'Custom Logging', 'Data Structure']"
example_pipeline = "False"
source_dir = "src"

[tool.ruff]
line-length = 88
show-fixes = true

[project.entry-points."kedro.hooks"]

[tool.pytest.ini_options]
addopts = "--cov-report term-missing --cov src/edf_forecasting -ra"

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = [ "pragma: no cover", "raise NotImplementedError",]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [ "F", "W", "E", "I", "UP", "PL", "T201",]
ignore = [ "E501",]

[tool.setuptools.dynamic.version]
attr = "edf_forecasting.__version__"

[tool.setuptools.packages.find]
where = [ "src",]
namespaces = false

[tool.kedro_telemetry]
project_id = "430c15e32b4c4975b0b608ded59ab65a"
